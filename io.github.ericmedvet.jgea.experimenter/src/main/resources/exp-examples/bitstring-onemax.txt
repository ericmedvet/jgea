ea.experiment(
  runs = (randomGenerator = (seed = [1:1:10]) * [ea.rg.defaultRG()]) *
    (solver = [
      ea.s.bitStringGa(
        mapper = ea.m.identity();
        nPop=100;
        nEval = 10000
      );
      ea.s.bitStringCabea(
        mapper = ea.m.identity();
        gridSize = 10;
        nEval = 10000
      )
    ]) * [
    ea.run(
      problem = ea.p.s.oneMax(p = 1000)
    )
  ];
  listeners = [
    ea.l.console(
      functions = [
        ea.nf.size(f = ea.nf.genotype(individual = ea.nf.best()); s = "%3d");
        ea.nf.fitness(individual = ea.nf.best(); s = "%6.4f");
        ea.nf.hist(collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.all()));
        ea.nf.percentile(collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.all()); p = 0.75; s = "%6.4f");
        ea.nf.solution(individual = ea.nf.best(); s = "%60.60s")
      ];
      runKeys = ["{solver:%#s}"]
    );
        ea.l.bestCsv(
          filePath = "/home/gpietrop/cabea/ds/bs.csv";
          functions = [
            ea.nf.size(f = ea.nf.genotype(individual = ea.nf.best()); s = "%3d");
                    ea.nf.fitness(individual = ea.nf.best(); s = "%6.4f");
                    ea.nf.hist(collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.all()));
                    ea.nf.percentile(collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.all()); p = 0.75; s = "%6.4f");
                    ea.nf.solution(individual = ea.nf.best(); s = "%60.60s")
                  ];
            runKeys = ["{solver:%#s}"]
        )
      ]
    )