ea.experiment(
  runs = (randomGenerator = (seed = [1:1:10]) * [ea.rg.defaultRG()]) *
    (problem = [
      ea.p.ur.synthetic(name = "pagie1");
      ea.p.ur.synthetic(name = "polynomial4");
      ea.p.ur.synthetic(name = "vladislavleva4");
      ea.p.ur.synthetic(name = "keijzer6");
      ea.p.ur.synthetic(name = "nguyen7");
      ea.p.ur.bundled(name = "concrete")
    ]) *
    (solver = (nEval = [10000]) * [
      ea.s.srTreeGp(
        mapper = ea.m.srTreeToUrf()
      );
      ea.s.srTreeCabea(
        mapper = ea.m.srTreeToUrf();
        gridSize = 10;
        mooreRadius = 1
      );
      ea.s.srTreeCabea(
        mapper = ea.m.srTreeToUrf();
        gridSize = 10;
        mooreRadius = 2
      );
      ea.s.srTreeCabea(
        mapper = ea.m.srTreeToUrf();
        gridSize = 10;
        mooreRadius = 3
      );
      ea.s.srTreeCabea(
        mapper = ea.m.srTreeToUrf();
        gridSize = 10;
        mooreRadius = 4
      );
      ea.s.srTreeCabea(
        mapper = ea.m.srTreeToUrf();
        gridSize = 8;
        mooreRadius = 1
      );
      ea.s.srTreeCabea(
        mapper = ea.m.srTreeToUrf();
        gridSize = 6;
        mooreRadius = 1
      );
      ea.s.srTreeCabea(
        mapper = ea.m.srTreeToUrf();
        gridSize = 4;
        mooreRadius = 1
      )
    ]) * [
    ea.run()
  ];
  listeners = [
    ea.l.console(
      functions = [
        ea.nf.size(f = ea.nf.genotype(individual = ea.nf.best()); s = "%3d");
        ea.nf.fitness(individual = ea.nf.best(); s = "%6.2f");
        ea.nf.hist(collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.all()));
        ea.nf.percentile(collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.all()); p = 0.75; s = "%6.2f");
        ea.nf.solution(individual = ea.nf.best(); s = "%60.60s")
      ];
      runKeys = ["{solver:%#s}"; "{problem.name}"]
    );
    ea.l.bestCsv(
      filePath = "/home/gpietrop/cabea/ds/sr.csv";
      functions = [
        ea.nf.size(f = ea.nf.genotype(individual = ea.nf.best()); s = "%3d");
        ea.nf.fitness(individual = ea.nf.best(); s = "%6.2f");
        ea.nf.percentile(collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.all()); p = 0.75; s = "%6.2f")
      ];
      runKeys = ["{solver:%#s}"; "{problem.name}"; "{solver.gridSize}"; "{solver.mooreRadius}"]
    )
  ]
)